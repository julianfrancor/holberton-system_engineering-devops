mysql -hlocalhost -uroot -p



#!/usr/bin/env bash
cat setup_mysql_dev.sql | mysql -hlocalhost -uroot -proot
echo "SHOW DATABASES;" | mysql -uhbnb_dev -phbnb_dev_pwd | grep hbnb_dev_db
echo "SHOW GRANTS FOR 'hbnb_dev'@'localhost';" | mysql -uroot -proot



FIX MYSQL

cd /var/run/mysqld
rm *
touch mysqld.sock
service mysql restart


=======================================================

CREATE USER IF NOT EXISTS 'holberton_user'@'localhost';
SET PASSWORD FOR 'holberton_user'@'localhost' = 'projectcorrection280hbtn';
GRANT REPLICATION CLIENT ON . TO 'holberton_user'@'localhost';

mysql -uholberton_user -p -e "SHOW GRANTS FOR 'holberton_user'@'localhost'"
Enter password: 
+-----------------------------------------------------------------+
| Grants for holberton_user@localhost                             |
+-----------------------------------------------------------------+
| GRANT REPLICATION CLIENT ON . TO 'holberton_user'@'localhost'   |
+-----------------------------------------------------------------+


========================================================



mysql -hlocalhost -uroot -proot
CREATE DATABASE IF NOT EXISTS tyrell_corp;
USE tyrell_corp;
CREATE TABLE nexus6 (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, name varchar(128) NOT NULL);
INSERT INTO nexus6 VALUES (1, 'Leon');
SELECT * FROM nexus6;
GRANT SELECT ON tyrell_corp.* TO 'holberton_user'@'localhost';
-----
then check if it's right
user: holberton_user
password: projectcorrection280hbtn

>>> mysql -uholberton_user -p -e "use tyrell_corp; select * from nexus6"


===========================================================

Before you get started with your primary-replica synchronization, you need one more thing in place. On your primary MySQL server (web-01), create a new user for the replica server.

mysql -u root -proot

→ The name of the new user should be replica_user, with the host name set to %, and can have whatever password you’d like.
CREATE USER IF NOT EXISTS 'replica_user'@'%';
SET PASSWORD FOR 'replica_user'@'%' = 'asd';
→ replica_user must have the appropriate permissions to replicate your primary MySQL server.
GRANT REPLICATION SLAVE ON *.* TO 'replica_user'@'%' IDENTIFIED BY 'asd';
→ holberton_user will need SELECT privileges on the mysql.user table in order to check that replica_user was created with the correct permissions.
GRANT SELECT ON mysql.user TO 'holberton_user'@'localhost';

------------------
https://www.digitalocean.com/community/tutorials/how-to-set-up-master-slave-replication-in-mysql
We need to grant privileges to the slave. You can use this line to name your slave and set up their password. The command should be in this format:
GRANT REPLICATION SLAVE ON *.* TO 'slave_user'@'%' IDENTIFIED BY 'password';
------------------

============================================================


Setup a Primary-Replica infrastructure using MySQL

Having a replica member on for your MySQL database has 2 advantages:
→ Redundancy: If you lose one of the database servers, you will still have another working one and a copy of your data
→ Load distribution: You can split the read operations between the 2 servers, reducing the load on the primary member and improving query response speed


IN SERVER 1 - MASTER

* sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf

# server id to your MySQL database - i usually use 1 for the master, and 2 for the slave:
server-id = 1
# the location of your log_bin, which the slave will use to replicate:
log_bin = /var/log/mysql/mysql-bin.log
# To replicate a specific database use:
binlog_do_db = tyrell_corp


MySQL listens for client connections on port 3306, we have to allow connections on port 3306 (default MySQL port) otherwise replication will not work
* sudo ufw allow 3306/tcp
restart mysql
* sudo service mysql restart
* sudo /etc/init.d/mysql restart

mysql -uroot -p
SHOW MASTER STATUS;

===========================================

IN SERVER 2 - SLAVE

sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf

comment out the bind_address
server-id = 2
log_bin = /var/log/mysql/mysql-bin.log
binlog_do_db = tyrell_corp
relay-log = /var/log/mysql/mysql-relay-bin.log

* sudo service mysql restart


mysql -uroot -p

CHANGE MASTER TO MASTER_HOST='34.73.51.195',MASTER_USER='replica_user', MASTER_PASSWORD='asd', MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS= 0;

START SLAVE;
SHOW SLAVE STATUS\G



==================================

Transfer_file to server or anywhere
#!/usr/bin/env bash
# script that transfers a file from our client to a server

if (("$#" != 4)); then
    echo "Usage: 0-transfer_file PATH_TO_FILE IP USERNAME PATH_TO_SSH_KEY"
else
    scp -o StrictHostKeyChecking=no -i "$4" "$1" "$3@$2":~/
fi

----------
then in the console use:

./transfer_file 5-mysql_backup 34.73.51.195 ubuntu ~/.ssh/holberton
